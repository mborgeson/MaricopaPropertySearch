# Maricopa Property Search - Environment Configuration Template
# Copy this file to .env and update with your actual values

# ========================================
# DATABASE CONFIGURATION
# ========================================

# PostgreSQL database connection settings
# Host where PostgreSQL is running (typically localhost for local development)
DB_HOST=localhost

# PostgreSQL port (default is 5432)
DB_PORT=5432

# Database name (must be created before running the application)
DB_NAME=maricopa_property_search

# Database username (must have read/write permissions)
DB_USER=property_user

# Database password (CHANGE THIS - do not use default passwords)
DB_PASSWORD=Wildcats777!!

# ========================================
# API CONFIGURATION
# ========================================

# Maricopa County API Token
# Obtain from Maricopa County Assessor's Office developer portal
# Required for official API access to property data
API_TOKEN=ca1a11a6-adc4-4e0c-a584-36cbb6eb35e5

# Alternative API endpoints (if available)
# BACKUP_API_URL=https://backup.maricopa.gov/api
# API_TIMEOUT_SECONDS=30

# ========================================
# APPLICATION PATHS
# ========================================

# Project root directory (absolute path to project folder)
# Update this to match your actual installation path
PROJECT_ROOT=C:\Users\YourUsername\Development\Work\MaricopaPropertySearch

# Python path for module imports
# Should point to the src directory within your project
PYTHONPATH=C:\Users\YourUsername\Development\Work\MaricopaPropertySearch\src

# ========================================
# LOGGING CONFIGURATION
# ========================================

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
# DEBUG: Detailed information for debugging
# INFO: General application information (recommended for production)
# WARNING: Warning messages only
# ERROR: Error messages only
LOG_LEVEL=INFO

# Log file directory (relative to project root)
LOG_DIR=logs

# Log file rotation settings
LOG_MAX_BYTES=10485760
LOG_BACKUP_COUNT=5

# ========================================
# PERFORMANCE SETTINGS
# ========================================

# Background data collection settings
# Maximum number of concurrent background jobs (adjust based on system resources)
# Recommended: Number of CPU cores - 1, maximum 5
MAX_CONCURRENT_JOBS=3

# Job timeout in seconds (how long to wait for data collection)
JOB_TIMEOUT_SECONDS=300

# Number of retry attempts for failed data collection
RETRY_ATTEMPTS=3

# Cache expiry in hours (how long to keep collected data before refreshing)
CACHE_EXPIRY_HOURS=24

# ========================================
# DATABASE PERFORMANCE
# ========================================

# Database connection pool settings
# Minimum number of database connections to maintain
DB_POOL_MIN_CONNECTIONS=5

# Maximum number of database connections allowed
DB_POOL_MAX_CONNECTIONS=20

# Connection timeout in seconds
DB_CONNECTION_TIMEOUT=30

# ========================================
# WEB SCRAPING CONFIGURATION
# ========================================

# Browser automation settings for Playwright
# Browser type: chromium, firefox, webkit
BROWSER_TYPE=chromium

# Headless mode (true for production, false for debugging)
BROWSER_HEADLESS=true

# Page load timeout in milliseconds
PAGE_TIMEOUT=30000

# Request delay in milliseconds (be respectful to servers)
REQUEST_DELAY=1000

# ========================================
# SECURITY SETTINGS
# ========================================

# Enable SSL verification for external requests
SSL_VERIFY=true

# User agent string for web requests
USER_AGENT=MaricopaPropertySearch/2.0

# Maximum file size for exports (in bytes)
MAX_EXPORT_SIZE=52428800

# ========================================
# DEVELOPMENT SETTINGS
# ========================================

# Enable development mode features
# Set to false in production
DEBUG_MODE=false

# Enable performance monitoring
PERFORMANCE_MONITORING=true

# Enable detailed error reporting
DETAILED_ERRORS=false

# Cache bypass for development (forces fresh data collection)
BYPASS_CACHE=false

# ========================================
# NOTIFICATION SETTINGS (Optional)
# ========================================

# Email notifications for errors (optional)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your_email@gmail.com
# SMTP_PASSWORD=your_app_password
# NOTIFICATION_EMAIL=admin@yourcompany.com

# ========================================
# BACKUP SETTINGS (Optional)
# ========================================

# Automatic database backup settings
# BACKUP_ENABLED=true
# BACKUP_DIRECTORY=backups
# BACKUP_RETENTION_DAYS=30
# BACKUP_SCHEDULE=daily

# ========================================
# EXAMPLE VALUES FOR QUICK SETUP
# ========================================

# Uncomment and modify these for a quick local development setup:
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=maricopa_dev
# DB_USER=postgres
# DB_PASSWORD=password123
# API_TOKEN=ca1a11a6-adc4-4e0c-a584-36cbb6eb35e5
# PROJECT_ROOT=C:\Development\MaricopaPropertySearch
# PYTHONPATH=C:\Development\MaricopaPropertySearch\src
# LOG_LEVEL=DEBUG
# MAX_CONCURRENT_JOBS=2
# DEBUG_MODE=true

# ========================================
# NOTES
# ========================================

# 1. Database Setup:
#    - Create PostgreSQL database before first run
#    - Run schema setup script: python scripts/setup_database.py
#    - Ensure database user has CREATE, READ, WRITE permissions

# 2. API Token:
#    - Contact Maricopa County Assessor's Office for developer access
#    - Some features may work without API token using web scraping
#    - API access provides more reliable and faster data retrieval

# 3. Performance Tuning:
#    - Adjust MAX_CONCURRENT_JOBS based on system resources
#    - Higher values = faster data collection but more resource usage
#    - Lower values = slower but more stable on limited resources

# 4. Security:
#    - Never commit the actual .env file to version control
#    - Use strong passwords for database access
#    - Regularly rotate API tokens and passwords

# 5. Troubleshooting:
#    - Set LOG_LEVEL=DEBUG for detailed troubleshooting
#    - Check logs directory for error details
#    - Use DEBUG_MODE=true for development features